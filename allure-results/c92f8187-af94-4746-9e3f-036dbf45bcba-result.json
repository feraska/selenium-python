{"name": "test_register[success register]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False == True\n +  where False = register('feras@gmail.com', '123', 'sanad', 'kasabri')", "trace": "e = 'feras@gmail.com', p = '123', f = 'sanad', l = 'kasabri', expected = True\n\n    @pytest.mark.parametrize(\"e, p, f, l, expected\",\n        [\n            (\"feras.94.kasabri@gmail.com\",\"123\",\"feras\",\"kasabri\",False),\n            (\"feras@gmail.com\",\"123\",\"sanad\",\"kasabri\",True),\n    \n        ],\n        ids=[\"user is found\",\"success register\"]\n        )\n    def test_register(e,p,f,l,expected):\n    \n>       assert register(e,p,f,l) == expected\nE       AssertionError: assert False == True\nE        +  where False = register('feras@gmail.com', '123', 'sanad', 'kasabri')\n\ntest_movie.py:293: AssertionError"}, "attachments": [{"name": "stdout", "source": "9ac6cec8-4dfe-47ff-acb6-953d038406b4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "e", "value": "'feras@gmail.com'"}, {"name": "p", "value": "'123'"}, {"name": "f", "value": "'sanad'"}, {"name": "l", "value": "'kasabri'"}, {"name": "expected", "value": "True"}], "start": 1738504867917, "stop": 1738504869375, "uuid": "fe3d363d-de9d-4a17-8d52-5096a63606a2", "historyId": "8a27f0476e3f1f4e83dd9bf727590494", "testCaseId": "e72ae411f08c1687d2b637de983826ef", "fullName": "test_movie#test_register", "labels": [{"name": "suite", "value": "test_movie"}, {"name": "host", "value": "LAPTOP-OM609ID0"}, {"name": "thread", "value": "21488-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_movie"}]}